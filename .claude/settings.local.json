{
  "permissions": {
    "allow": [
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); indicators = data.get(''''indicators'''', {}); print(''''RSI:'''', indicators.get(''''rsi'''')); print(''''MFI:'''', indicators.get(''''mfi'''')); print(''''ADX:'''', indicators.get(''''adx'''')); print(''''Volume:'''', indicators.get(''''volume_spike'''')); print(''''\\nScore:'''', data.get(''''score'''', {}).get(''''total_score'''')); print(''''Action:'''', data.get(''''action''''))\")",
      "Bash(curl -s http://localhost:5009/api/trading-opportunities/SOLUSDC)",
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); print(''''Indicators section:'''', json.dumps(data.get(''''indicators'''', {}), indent=2)); print(''''\\nScore:'''', data.get(''''score'''', {}).get(''''total_score'''')); print(''''Action:'''', data.get(''''action''''))\")",
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); raw = data.get(''''raw_data'''', {}).get(''''analyzer_data'''', {}); print(''''=== MOYENNES MOBILES (NON UTILISÉES!) ===''''); print(f''''EMA 7: {raw.get(\"\"ema_7\"\")}''''); print(f''''EMA 12: {raw.get(\"\"ema_12\"\")}''''); print(f''''EMA 26: {raw.get(\"\"ema_26\"\")}''''); print(f''''EMA 50: {raw.get(\"\"ema_50\"\")}''''); print(f''''EMA 99: {raw.get(\"\"ema_99\"\")}''''); print(f''''SMA 20: {raw.get(\"\"sma_20\"\")}''''); print(f''''SMA 50: {raw.get(\"\"sma_50\"\")}''''); print(f''''WMA 20: {raw.get(\"\"wma_20\"\")}''''); print(f''''DEMA 12: {raw.get(\"\"dema_12\"\")}''''); print(f''''TEMA 12: {raw.get(\"\"tema_12\"\")}''''); print(f''''Hull 20: {raw.get(\"\"hull_20\"\")}''''); print(f''''KAMA 14: {raw.get(\"\"kama_14\"\")}''''); print(''''\\n=== VWAP (NON UTILISÉ!) ===''''); print(f''''VWAP 10: {raw.get(\"\"vwap_10\"\")}''''); print(f''''VWAP quote 10: {raw.get(\"\"vwap_quote_10\"\")}''''); print(f''''Anchored VWAP: {raw.get(\"\"anchored_vwap\"\")}''''); print(''''\\n=== SUPPORT/RESISTANCE (PARTIELLEMENT UTILISÉ) ===''''); print(f''''Nearest support: {raw.get(\"\"nearest_support\"\")}''''); print(f''''Nearest resistance: {raw.get(\"\"nearest_resistance\"\")}''''); print(f''''Support strength: {raw.get(\"\"support_strength\"\")}''''); print(f''''Resistance strength: {raw.get(\"\"resistance_strength\"\")}''''); print(f''''Break probability: {raw.get(\"\"break_probability\"\")}''''); print(''''\\n=== BOLLINGER BANDS COMPLET (NON UTILISÉ!) ===''''); print(f''''BB upper: {raw.get(\"\"bb_upper\"\")}''''); print(f''''BB middle: {raw.get(\"\"bb_middle\"\")}''''); print(f''''BB lower: {raw.get(\"\"bb_lower\"\")}''''); print(f''''BB width: {raw.get(\"\"bb_width\"\")}''''); print(f''''Keltner upper: {raw.get(\"\"keltner_upper\"\")}''''); print(f''''Keltner lower: {raw.get(\"\"keltner_lower\"\")}''''); print(''''\\n=== PATTERN (NON UTILISÉ!) ===''''); print(f''''Pattern: {raw.get(\"\"pattern_detected\"\")}''''); print(f''''Pattern confidence: {raw.get(\"\"pattern_confidence\"\")}''''); print(f''''Signal strength: {raw.get(\"\"signal_strength\"\")}''''); print(f''''Confluence score: {raw.get(\"\"confluence_score\"\")}'''');\")",
      "Bash(python test_adaptive_targets.py:*)"
    ],
    "deny": [],
    "ask": []
  },
  "framework": "superclaude",
  "framework_path": "E:\\RootTrading\\RootTrading\\.claude\\frameworks\\superclaude",
  "project_root": "E:\\RootTrading\\RootTrading",
  "theme": "dark",
  "default_mode": "research"
}
